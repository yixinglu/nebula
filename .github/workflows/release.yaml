name: release

on:
  release:
    types:
      - published

jobs:
  package:
    name: package and upload release assets
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os:
          - ubuntu1604
          - ubuntu1804
          - centos6
          - centos7
    steps:
      - uses: actions/checkout@v1
      - name: Package
        run: docker run --rm -v $(pwd):/home/nebula vesoft/nebula-dev:${{ matrix.os }} ./package/package.sh
      - name: Output vars
        id: vars
        env:
          CPACK_OUTPUT_DIR: build/cpack_output
          SHA_EXT: sha256sum.txt
        run: |
          tag=$(echo ${{ github.ref }} | rev | cut -d/ -f1 | rev)
          cd $CPACK_OUTPUT_DIR
          filename=$(find . -type f \( -iname \*.deb -o -iname \*.rpm \) -exec basename {} \;)
          content_type=$(file -b --mime-type $filename)
          sha256sum $filename > $filename.$SHA_EXT
          sha_content_type=$(file -b --mime-type $filename.$SHA_EXT)
          upload_url=$(curl -s --request GET --url "https://api.github.com/repos/${{ github.repository }}/releases/tags/$tag" | grep -oP '(?<="upload_url": ")[^"]*' | cut -d'{' -f1)
          echo "::set-output name=tag::$tag"
          echo "::set-output name=filename::$filename"
          echo "::set-output name=content_type::$content_type"
          echo "::set-output name=sha_filename::$filename.$SHA_EXT"
          echo "::set-output name=sha_content_type::$sha_content_type"
          echo "::set-output name=upload_url::$upload_url"
      - name: Upload Package Release Asset
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.vars.outputs.upload_url }}
          asset_path: build/cpack_output/${{ steps.vars.outputs.filename }}
          asset_name: ${{ steps.vars.outputs.filename }}
          asset_content_type: ${{ steps.vars.outputs.content_type }}
      - name: Upload Package SHA Release Asset
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.vars.outputs.upload_url }}
          asset_path: build/cpack_output/${{ steps.vars.outputs.sha_filename }}
          asset_name: ${{ steps.vars.outputs.sha_filename }}
          asset_content_type: ${{ steps.vars.outputs.sha_content_type }}
      - name: Upload release artifacts
        uses: actions/upload-artifact@v1
        with:
          name: ${{ matrix.os }}-release
          path: build/cpack_output

  docker:
    name: build docker images
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service:
          - metad
          - storaged
          - graphd
          - console
          - graph
    steps:
      - uses: azure/docker-login@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - uses: actions/checkout@v1
        with:
          fetch-depth: 1
      - name: Build release image
        env:
          IMAGE_NAME: ${{ secrets.DOCKER_USERNAME }}/nebula-${{ matrix.service }}
        run: |
          tag=$(echo ${{ github.ref }} | rev | cut -d/ -f1 | rev)
          docker build -t ${IMAGE_NAME}:${tag} -f docker/Dockerfile.${{ matrix.service }} .
          docker tag ${IMAGE_NAME}:${tag} ${IMAGE_NAME}:latest
          docker push ${IMAGE_NAME}:${tag}
          docker push ${IMAGE_NAME}:latest
        shell: bash
